<?xml version="1.0"?>
<ruleset name="Basic Ecmascript" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemalocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        Rules concerning basic ECMAScript guidelines.
    </description>
    <!--<rule message="Avoid assignments in operands" ref="rulesets/ecmascript/basic.xml/AssignmentInOperand">
        <priority>3</priority> 
    </rule>-->
    <rule message="A ''return'', ''break'', ''continue'', or ''throw'' statement should be the last in a block." ref="rulesets/ecmascript/basic.xml/UnreachableCode">
        <priority>3</priority> 
    </rule>
    <rule message="The numeric literal ''{0}'' will have a different value at runtime." ref="rulesets/ecmascript/basic.xml/InnaccurateNumericLiteral">
        <priority>3</priority> 
    </rule>
    <rule message="A function should not mix 'return' statements with and without a result." ref="rulesets/ecmascript/basic.xml/ConsistentReturn">
        <priority>3</priority> 
    </rule>
    <rule message="The for-in loop variable ''{0}'' should be explicitly scoped with 'var' to avoid pollution." ref="rulesets/ecmascript/basic.xml/ScopeForInVariable">
        <priority>3</priority> 
    </rule>
    <rule message="Use '==='/'!==' to compare with true/false or Numbers" ref="rulesets/ecmascript/basic.xml/EqualComparison">
        <priority>3</priority> 
    </rule>
    <rule message="Avoid using global variables" ref="rulesets/ecmascript/basic.xml/GlobalVariable">
        <priority>3</priority> 
    </rule>
    <rule message="Avoid trailing commas in object or array literals" ref="rulesets/ecmascript/basic.xml/AvoidTrailingComma"><priority>3</priority> 
    </rule>
    <rule message="Always provide a base when using parseInt() functions" ref="rulesets/ecmascript/basic.xml/UseBaseWithParseInt">
        <priority>3</priority> 
    </rule>

  <rule message="Unnecessary parentheses." ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryParentheses">
        <priority>3</priority> 
  </rule>
  <rule message="Unnecessary block." ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryBlock">
        <priority>3</priority> 
  </rule>
 <rule  message="The else block is unnecessary" ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryBlock">
        <priority>3</priority> 
  </rule>
   <rule  message="The else block is unnecessary" ref="rulesets/ecmascript/unnecessary.xml/NoElseReturn">
        <priority>3</priority> 
  </rule>
</ruleset>

